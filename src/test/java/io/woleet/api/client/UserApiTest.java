/*
 * Woleet API
 * Welcome to **Woleet API reference documentation**.<br> It is highly recommanded to read the chapters **[introducing Woleet API concepts](https://doc.woleet.io/reference)** before reading this documentation. 
 *
 * OpenAPI spec version: 1.6.1
 * Contact: contact@woleet.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.woleet.api.client;

import io.woleet.api.ApiException;
import io.woleet.api.client.model.CallbackSecret;
import io.woleet.api.client.model.Credits;
import io.woleet.api.client.model.InlineObject;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserApi
 */
@Ignore
public class UserApiTest {

    private final UserApi api = new UserApi();

    
    /**
     * Get the currently used callback secret (null if not set).
     *
     * Use this operation to get the api callback secret.&lt;br&gt; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCallbackSecretTest() throws ApiException {
        CallbackSecret response = api.getCallbackSecret();

        // TODO: test validations
    }
    
    /**
     * Get user&#39;s credits.
     *
     * Use this operation to get the remaining signature and anchoring credits of the authenticated user.&lt;br&gt; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCreditsTest() throws ApiException {
        Credits response = api.getCredits();

        // TODO: test validations
    }
    
    /**
     * Get user&#39;s registered JWT tokens.
     *
     * Use this operation to list all JWT tokens registered for the authenticated user. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTokensTest() throws ApiException {
        List<String> response = api.getTokens();

        // TODO: test validations
    }
    
    /**
     * Update user&#39;s registered JWT tokens.
     *
     * Use this operation to update the list of JWT tokens registered for the authenticated user. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putTokensTest() throws ApiException {
        InlineObject inlineObject = null;
        api.putTokens(inlineObject);

        // TODO: test validations
    }
    
    /**
     * Generates a new callback secret.
     *
     * Use this operation to generate the api callback secret.&lt;br&gt; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCallbackSecretTest() throws ApiException {
        CallbackSecret response = api.updateCallbackSecret();

        // TODO: test validations
    }
    
}
