/*
 * Woleet API
 * Welcome to **Woleet API reference documentation**.<br> It is highly recommanded to read the chapters **[introducing Woleet API concepts](https://doc.woleet.io/v1.5.1/reference)** before reading this documentation. 
 *
 * OpenAPI spec version: 1.5.1
 * Contact: contact@woleet.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.woleet.api.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * For Chainpoint 1.x receipts only
 */
@ApiModel(description = "For Chainpoint 1.x receipts only")

public class ReceiptHeader {
  @SerializedName("chainpoint_version")
  private String chainpointVersion = "1.0";

  @SerializedName("hash_type")
  private String hashType = "SHA-256";

  @SerializedName("merkle_root")
  private String merkleRoot = null;

  @SerializedName("tx_id")
  private String txId = null;

  @SerializedName("timestamp")
  private Long timestamp = null;

  public ReceiptHeader chainpointVersion(String chainpointVersion) {
    this.chainpointVersion = chainpointVersion;
    return this;
  }

   /**
   * Get chainpointVersion
   * @return chainpointVersion
  **/
  @ApiModelProperty(value = "")
  public String getChainpointVersion() {
    return chainpointVersion;
  }

  public void setChainpointVersion(String chainpointVersion) {
    this.chainpointVersion = chainpointVersion;
  }

  public ReceiptHeader hashType(String hashType) {
    this.hashType = hashType;
    return this;
  }

   /**
   * Get hashType
   * @return hashType
  **/
  @ApiModelProperty(value = "")
  public String getHashType() {
    return hashType;
  }

  public void setHashType(String hashType) {
    this.hashType = hashType;
  }

  public ReceiptHeader merkleRoot(String merkleRoot) {
    this.merkleRoot = merkleRoot;
    return this;
  }

   /**
   * Get merkleRoot
   * @return merkleRoot
  **/
  @ApiModelProperty(value = "")
  public String getMerkleRoot() {
    return merkleRoot;
  }

  public void setMerkleRoot(String merkleRoot) {
    this.merkleRoot = merkleRoot;
  }

  public ReceiptHeader txId(String txId) {
    this.txId = txId;
    return this;
  }

   /**
   * Get txId
   * @return txId
  **/
  @ApiModelProperty(value = "")
  public String getTxId() {
    return txId;
  }

  public void setTxId(String txId) {
    this.txId = txId;
  }

  public ReceiptHeader timestamp(Long timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @ApiModelProperty(value = "")
  public Long getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Long timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReceiptHeader receiptHeader = (ReceiptHeader) o;
    return Objects.equals(this.chainpointVersion, receiptHeader.chainpointVersion) &&
        Objects.equals(this.hashType, receiptHeader.hashType) &&
        Objects.equals(this.merkleRoot, receiptHeader.merkleRoot) &&
        Objects.equals(this.txId, receiptHeader.txId) &&
        Objects.equals(this.timestamp, receiptHeader.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(chainpointVersion, hashType, merkleRoot, txId, timestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReceiptHeader {\n");
    
    sb.append("    chainpointVersion: ").append(toIndentedString(chainpointVersion)).append("\n");
    sb.append("    hashType: ").append(toIndentedString(hashType)).append("\n");
    sb.append("    merkleRoot: ").append(toIndentedString(merkleRoot)).append("\n");
    sb.append("    txId: ").append(toIndentedString(txId)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

