/*
 * Woleet API
 * Welcome to **Woleet API reference documentation**.<br> It is highly recommanded to read the chapters **[introducing Woleet API concepts](https://doc.woleet.io/reference)** before reading this documentation. 
 *
 * OpenAPI spec version: 1.5.3
 * Contact: contact@woleet.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.woleet.api.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.woleet.api.client.model.Identity;
import io.woleet.api.client.model.X509SubjectIssuer;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * IdentityVerificationStatus
 */

public class IdentityVerificationStatus {
  /**
   * Identity verification status code:&lt;br&gt; - VERIFIED: the identity is verified (the identity URL succeeded to sign a challenge using the same public key as the proof receipt, proving it owns the associated private key)&lt;br&gt; - HTTP_ERROR: the identity URL returned an HTTP error&lt;br&gt; - INVALID_SIGNATURE: the identity URL returned an invalid signature (and thus failed to prove the ownership of the proof receipt&#39;s &#x60;pubKey&#x60; public key) 
   */
  @JsonAdapter(CodeEnum.Adapter.class)
  public enum CodeEnum {
    VERIFIED("VERIFIED"),
    
    HTTP_ERROR("HTTP_ERROR"),
    
    INVALID_SIGNATURE("INVALID_SIGNATURE");

    private String value;

    CodeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CodeEnum fromValue(String text) {
      for (CodeEnum b : CodeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + text + "'");
    }

    public static class Adapter extends TypeAdapter<CodeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CodeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CodeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return CodeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private CodeEnum code;

  public static final String SERIALIZED_NAME_TEXT = "text";
  @SerializedName(SERIALIZED_NAME_TEXT)
  private String text;

  public static final String SERIALIZED_NAME_CERTIFICATES = "certificates";
  @SerializedName(SERIALIZED_NAME_CERTIFICATES)
  private List<X509SubjectIssuer> certificates = null;

  public static final String SERIALIZED_NAME_IDENTITY = "identity";
  @SerializedName(SERIALIZED_NAME_IDENTITY)
  private Identity identity = null;

  public IdentityVerificationStatus code(CodeEnum code) {
    this.code = code;
    return this;
  }

   /**
   * Identity verification status code:&lt;br&gt; - VERIFIED: the identity is verified (the identity URL succeeded to sign a challenge using the same public key as the proof receipt, proving it owns the associated private key)&lt;br&gt; - HTTP_ERROR: the identity URL returned an HTTP error&lt;br&gt; - INVALID_SIGNATURE: the identity URL returned an invalid signature (and thus failed to prove the ownership of the proof receipt&#39;s &#x60;pubKey&#x60; public key) 
   * @return code
  **/
  @ApiModelProperty(value = "Identity verification status code:<br> - VERIFIED: the identity is verified (the identity URL succeeded to sign a challenge using the same public key as the proof receipt, proving it owns the associated private key)<br> - HTTP_ERROR: the identity URL returned an HTTP error<br> - INVALID_SIGNATURE: the identity URL returned an invalid signature (and thus failed to prove the ownership of the proof receipt's `pubKey` public key) ")
  public CodeEnum getCode() {
    return code;
  }

  public void setCode(CodeEnum code) {
    this.code = code;
  }

  public IdentityVerificationStatus text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Identity verification status text giving more insight about verification errors.
   * @return text
  **/
  @ApiModelProperty(value = "Identity verification status text giving more insight about verification errors.")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public IdentityVerificationStatus certificates(List<X509SubjectIssuer> certificates) {
    this.certificates = certificates;
    return this;
  }

  public IdentityVerificationStatus addCertificatesItem(X509SubjectIssuer certificatesItem) {
    if (this.certificates == null) {
      this.certificates = new ArrayList<X509SubjectIssuer>();
    }
    this.certificates.add(certificatesItem);
    return this;
  }

   /**
   * Array of subjects and issuers of the certificates extracted from the identity URL&#39;s TLS certificate.
   * @return certificates
  **/
  @ApiModelProperty(value = "Array of subjects and issuers of the certificates extracted from the identity URL's TLS certificate.")
  public List<X509SubjectIssuer> getCertificates() {
    return certificates;
  }

  public void setCertificates(List<X509SubjectIssuer> certificates) {
    this.certificates = certificates;
  }

  public IdentityVerificationStatus identity(Identity identity) {
    this.identity = identity;
    return this;
  }

   /**
   * Get identity
   * @return identity
  **/
  @ApiModelProperty(value = "")
  public Identity getIdentity() {
    return identity;
  }

  public void setIdentity(Identity identity) {
    this.identity = identity;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IdentityVerificationStatus identityVerificationStatus = (IdentityVerificationStatus) o;
    return Objects.equals(this.code, identityVerificationStatus.code) &&
        Objects.equals(this.text, identityVerificationStatus.text) &&
        Objects.equals(this.certificates, identityVerificationStatus.certificates) &&
        Objects.equals(this.identity, identityVerificationStatus.identity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, text, certificates, identity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdentityVerificationStatus {\n");
    
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    certificates: ").append(toIndentedString(certificates)).append("\n");
    sb.append("    identity: ").append(toIndentedString(identity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

